#include "ar1541.h"

IECTransreceiver iecTransreceiver;
boolean send = false;

// Bytes of the compiled Flapper sample game from C64Studio
static byte prg[] = { 0x01, 0x08, 0x0c, 0x08, 0x0a, 0x00, 0x9e, 0x20, 0x32, 0x30, 0x36, 0x34, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xa9, 0x07, 0x8d, 0x25, 0xd0, 0xa9, 0x02, 0x8d, 0x27, 0xd0, 0x20, 0xc0, 0x0b, 0x4c, 0x67, 0x0b, 0x00, 0x01,
    0x01, 0x02, 0x02, 0x03, 0x03, 0x04, 0x20, 0x20, 0x59, 0x4f, 0x55, 0x20, 0x46, 0x4c, 0x45, 0x57, 0x20, 0x20, 0x20,
    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4d, 0x00, 0x80, 0x80, 0x08, 0x54, 0x00, 0x00, 0x01, 0x54, 0x00, 0x00, 0x01,
    0x50, 0x00, 0x28, 0x05, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0xaa, 0xf0, 0x8f, 0x9a, 0x0c, 0x9e, 0xaa, 0x33,
    0xae, 0x96, 0x03, 0x3a, 0xa6, 0x03, 0x36, 0x96, 0x03, 0xf2, 0x96, 0x83, 0x02, 0xaa, 0xaa, 0x00, 0xaa, 0xa8, 0x00,
    0x2a, 0xa0, 0x00, 0x20, 0x80, 0x02, 0xa0, 0x88, 0x00, 0x0a, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
    0x00, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x40, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0xaa,
    0xf0, 0x80, 0x9a, 0x0c, 0xc6, 0xaa, 0x33, 0xfa, 0x96, 0x03, 0x2f, 0xa6, 0x03, 0x1b, 0x96, 0x03, 0x02, 0x96, 0x83,
    0x02, 0xaa, 0xaa, 0x00, 0xaa, 0xa8, 0x00, 0x2a, 0xa0, 0x00, 0x20, 0x80, 0x02, 0xa0, 0x88, 0x00, 0x0a, 0xa0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
    0x10, 0x00, 0x00, 0x20, 0x00, 0x00, 0x10, 0x00, 0x08, 0xb8, 0x80, 0x02, 0x9a, 0x00, 0x02, 0x76, 0x00, 0x29, 0xfd,
    0xa0, 0x02, 0x76, 0x00, 0x02, 0x9a, 0x00, 0x08, 0xb8, 0x80, 0x00, 0x10, 0x00, 0x00, 0x20, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xfb,
    0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa9, 0x01, 0x8d, 0x15, 0xd0, 0x8d, 0x26, 0xd0, 0x8d,
    0x1c, 0xd0, 0x8d, 0x01, 0x08, 0xa9, 0x64, 0x8d, 0x00, 0xd0, 0x8d, 0x01, 0xd0, 0xa9, 0x20, 0x85, 0xd0, 0xa9, 0x80,
    0x8d, 0x3d, 0x08, 0xa9, 0x18, 0x8d, 0x02, 0x08, 0xa9, 0x12, 0x8d, 0x18, 0xd0, 0xa9, 0x00, 0x8d, 0x00, 0xd4, 0xa9,
    0x0a, 0x8d, 0x01, 0xd4, 0xa9, 0x04, 0x8d, 0x05, 0xd4, 0xa9, 0x19, 0x8d, 0x06, 0xd4, 0xa9, 0x0f, 0x8d, 0x18, 0xd4,
    0x20, 0xc0, 0x0b, 0xad, 0x1f, 0xd0, 0xa0, 0x07, 0xa9, 0x30, 0x99, 0x00, 0x40, 0x88, 0xc0, 0xff, 0xd0, 0xf8, 0xce,
    0x0c, 0x08, 0xad, 0x0c, 0x08, 0x29, 0x07, 0x8d, 0x16, 0xd0, 0xc9, 0x07, 0xf0, 0x03, 0x4c, 0x49, 0x0a, 0xa2, 0x00,
    0xbd, 0x01, 0x04, 0x9d, 0x00, 0x04, 0xe8, 0xd0, 0xf7, 0xbd, 0x01, 0x05, 0x9d, 0x00, 0x05, 0xe8, 0xd0, 0xf7, 0xbd,
    0x01, 0x06, 0x9d, 0x00, 0x06, 0xe8, 0xd0, 0xf7, 0xbd, 0x01, 0x07, 0x9d, 0x00, 0x07, 0xe8, 0xe0, 0xe8, 0xd0, 0xf5,
    0xa9, 0x04, 0x85, 0xf3, 0xa9, 0x27, 0x85, 0xf2, 0xa2, 0x00, 0xa0, 0x00, 0xad, 0x29, 0x08, 0x91, 0xf2, 0xa5, 0xf2,
    0x18, 0x69, 0x28, 0x85, 0xf2, 0xa9, 0x00, 0xa5, 0xf3, 0x69, 0x00, 0x85, 0xf3, 0xe8, 0xec, 0x01, 0x08, 0xf0, 0x0c,
    0xec, 0x02, 0x08, 0xf0, 0x10, 0xe0, 0x19, 0xf0, 0x14, 0x4c, 0xaa, 0x09, 0xad, 0x28, 0x08, 0x8d, 0x29, 0x08, 0x4c,
    0xaa, 0x09, 0xa9, 0x20, 0x8d, 0x29, 0x08, 0x4c, 0xaa, 0x09, 0x20, 0xaa, 0x0b, 0xad, 0x01, 0x08, 0x18, 0x7d, 0x20,
    0x08, 0x38, 0xe9, 0x02, 0x8d, 0x01, 0x08, 0xc9, 0xdc, 0xb0, 0x1d, 0xc9, 0x01, 0x90, 0x19, 0xad, 0x02, 0x08, 0x38,
    0xed, 0x01, 0x08, 0xcd, 0x3f, 0x08, 0xb0, 0x12, 0xad, 0x02, 0x08, 0x38, 0xed, 0x3f, 0x08, 0x8d, 0x01, 0x08, 0x4c,
    0x17, 0x0a, 0xa9, 0x01, 0x8d, 0x01, 0x08, 0x20, 0xaa, 0x0b, 0xad, 0x02, 0x08, 0x18, 0x7d, 0x20, 0x08, 0x38, 0xe9,
    0x02, 0x8d, 0x02, 0x08, 0xc9, 0x18, 0xb0, 0x19, 0xad, 0x02, 0x08, 0x38, 0xed, 0x01, 0x08, 0xcd, 0x3f, 0x08, 0xb0,
    0x12, 0xad, 0x01, 0x08, 0x18, 0x6d, 0x3f, 0x08, 0x8d, 0x02, 0x08, 0x4c, 0x49, 0x0a, 0xa9, 0x17, 0x8d, 0x02, 0x08,
    0xa5, 0xd0, 0xc9, 0x40, 0xf0, 0x02, 0xe6, 0xd0, 0xad, 0x3d, 0x08, 0x18, 0x65, 0xd0, 0x38, 0xe9, 0x20, 0x8d, 0x3d,
    0x08, 0xc9, 0xa0, 0x10, 0x07, 0xc9, 0x60, 0x30, 0x12, 0x4c, 0x83, 0x0a, 0xee, 0x01, 0xd0, 0xad, 0x3d, 0x08, 0x38,
    0xe9, 0x20, 0x8d, 0x3d, 0x08, 0x4c, 0x83, 0x0a, 0xce, 0x01, 0xd0, 0xad, 0x3d, 0x08, 0x18, 0x69, 0x20, 0x8d, 0x3d,
    0x08, 0xad, 0x01, 0xd0, 0xc9, 0xdd, 0xf0, 0x07, 0xc9, 0x36, 0xf0, 0x08, 0x4c, 0x98, 0x0a, 0xa9, 0xdc, 0x4c, 0x98,
    0x0a, 0xa9, 0x37, 0x8d, 0x01, 0xd0, 0xa9, 0x10, 0x2c, 0x00, 0xdc, 0xd0, 0x1b, 0xad, 0x03, 0x08, 0xd0, 0x1b, 0xa9,
    0x01, 0x8d, 0x03, 0x08, 0xa5, 0xd0, 0x38, 0xe9, 0x10, 0x30, 0x03, 0x4c, 0xb8, 0x0a, 0xa9, 0x00, 0x85, 0xd0, 0x4c,
    0xc2, 0x0a, 0xa9, 0x00, 0x8d, 0x03, 0x08, 0xa9, 0x60, 0x38, 0xe5, 0xd0, 0x18, 0x6d, 0x3e, 0x08, 0x8d, 0x3e, 0x08,
    0x90, 0x0b, 0x20, 0x9f, 0x0b, 0xad, 0xf8, 0x07, 0x49, 0x03, 0x8d, 0xf8, 0x07, 0xad, 0x1f, 0xd0, 0xd0, 0x3c, 0xad,
    0x1f, 0xd0, 0xa2, 0x07, 0xfe, 0x00, 0x40, 0xbd, 0x00, 0x40, 0xc9, 0x3a, 0xd0, 0x18, 0xa9, 0x30, 0x9d, 0x00, 0x40,
    0xca, 0xe0, 0x05, 0xd0, 0x0b, 0xce, 0x3f, 0x08, 0xad, 0x3f, 0x08, 0x09, 0x05, 0x8d, 0x3f, 0x08, 0x4c, 0xe5, 0x0a,
    0x20, 0x0d, 0x0b, 0x4c, 0x64, 0x09, 0xad, 0x12, 0xd0, 0xc9, 0xff, 0xf0, 0xf9, 0xad, 0x12, 0xd0, 0xc9, 0xff, 0xd0,
    0xf9, 0x60, 0xa9, 0x29, 0x8d, 0x06, 0xd4, 0xa9, 0x1d, 0x8d, 0x05, 0xd4, 0x20, 0x9f, 0x0b, 0xa9, 0x23, 0x8d, 0xf8,
    0x07, 0xa2, 0xc8, 0x20, 0x0d, 0x0b, 0xca, 0xd0, 0xfa, 0xa9, 0x20, 0x8d, 0x28, 0x08, 0x20, 0xc0, 0x0b, 0xa9, 0x15,
    0x8d, 0x18, 0xd0, 0xa9, 0x08, 0x8d, 0x16, 0xd0, 0xa9, 0x00, 0x8d, 0x15, 0xd0, 0xa2, 0x04, 0xa0, 0x0a, 0xa9, 0x2a,
    0x85, 0xfb, 0xa9, 0x08, 0x85, 0xfc, 0x20, 0x8d, 0x0b, 0xa0, 0x08, 0xb9, 0xff, 0x3f, 0x99, 0xb2, 0x04, 0x88, 0xd0,
    0xf7, 0xa2, 0x08, 0xa0, 0x09, 0xa9, 0xe8, 0x85, 0xfb, 0xa9, 0x0b, 0x85, 0xfc, 0x20, 0x8d, 0x0b, 0xa9, 0x21, 0x8d,
    0x28, 0x08, 0xa9, 0x00, 0x8d, 0x20, 0xd0, 0x8d, 0x21, 0xd0, 0xad, 0x00, 0xdc, 0x29, 0x10, 0xd0, 0xf9, 0x4c, 0x10,
    0x09, 0x18, 0x20, 0xf0, 0xff, 0xa0, 0x00, 0xb1, 0xfb, 0xf0, 0x07, 0x20, 0xd2, 0xff, 0xc8, 0x4c, 0x93, 0x0b, 0x60,
    0xa9, 0x00, 0x8d, 0x04, 0xd4, 0xa9, 0x81, 0x8d, 0x04, 0xd4, 0x60, 0xad, 0x04, 0xdc, 0x4d, 0x05, 0xdc, 0x4d, 0x04,
    0xdd, 0x6d, 0x05, 0xdd, 0x4d, 0x06, 0xdd, 0x4d, 0x07, 0xdd, 0x29, 0x07, 0xaa, 0x60, 0xa9, 0x00, 0x85, 0xfb, 0xa9,
    0x04, 0x85, 0xfc, 0xa9, 0x00, 0x85, 0xf9, 0xa9, 0xd8, 0x85, 0xfa, 0xa2, 0x04, 0xa0, 0x00, 0xad, 0x28, 0x08, 0x91,
    0xfb, 0xa9, 0x08, 0x91, 0xf9, 0xc8, 0xd0, 0xf4, 0xe6, 0xfc, 0xe6, 0xfa, 0xca, 0xd0, 0xed, 0x60, 0x46, 0x4c, 0x41,
    0x50, 0x50, 0x45, 0x52, 0x20, 0x2d, 0x20, 0x50, 0x52, 0x45, 0x53, 0x53, 0x20, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e,
    0x00 };

void setup() {
  Serial.begin(115200);

  prepareDriveLedPin();
  prepareBusPins();
  prepareTimer();
  prepareBusInterrupts();

  enableInterrupt(CLOCK_INTERRUPT);

  iecTransreceiver.setReadyToSendCallback(&readyToSend);
  iecTransreceiver.start();
}

void sendMiniProg() {
  unsigned int i=0;

  // Load program from firmware
  while (iecTransreceiver.isTalker()) {
    while (iecTransreceiver.isTransmitting())
      ;
    iecTransreceiver.sendByte(prg[i], i == sizeof(prg) - 1);
    i++;
    if (i == sizeof(prg)) {
      break;
    }
  }

  if (i<sizeof(prg)) {
    Serial.print("!");
  }
}

void loop() {
  if (send) {
    send = false;
    sendMiniProg();
  }
}

void timerInterrupt() {
  iecTransreceiver.timerInterrupt();
}

void atnInterrupt() {
  iecTransreceiver.atnLineChanged();
}

void clockInterrupt() {
  iecTransreceiver.clockLineChanged();
}

void dataInterrupt() {
  iecTransreceiver.dataLineChanged();
}

void resetInterrupt() {
  byte reset = readPin(RESET_PIN);
  if (reset == LOW) {
    setDriveLed(true);
    iecTransreceiver.reset();
  } else {
    setDriveLed(false);
    iecTransreceiver.start();
  }
}

void readyToSend() {
  send = true;
}
